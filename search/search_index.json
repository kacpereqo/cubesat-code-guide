{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Wielka ksi\u0119ga przewinie\u0144 programist\u00f3w osadzonych Wst\u0119p Jak wiadomo, dokumentacji nikt nie b\u0119dzie czyta\u0142 dok\u0142adnie, s\u0142owo w s\u0142owo. Wi\u0119c prosz\u0119 si\u0119 nie zdziwi\u0107 jak pojawi\u0105 si\u0119 tutaj jajka wielkanocno \u015bwi\u0105teczne, a forma nie b\u0119dzie w pe\u0142ni oficjalna. Ka\u017cdy punkt b\u0119dzie wygl\u0105da\u0142 na zasadzie Rozwi\u0105zanie -> Problemy tego rozwi\u0105zania -> Lepsze rozwi\u0105zanie + potencjalne wyj\u0105tki B\u0119dzie u\u017cywany C++20, skoro robimy co\u015b mega, to b\u0119dzie nowocze\u015bnie. Za\u0142o\u017cenia Projekt tworzenia studenckiego satelity, nie jest projektem drogiej todo listy. Programi\u015bci, przychodz\u0105, odchodz\u0105, stale... Programi\u015bci w projekcie b\u0119da si\u0119 przewija\u0107, b\u0119da z r\u00f3\u017cnym do\u015bwiadczeniem, z r\u00f3\u017cn\u0105 wiedz\u0105. To jest pow\u00f3d dla kt\u00f3rego kod powinien by\u0107 jak najprostszy, to znaczy, bez fiku\u015bnych twor\u00f3w np std::views , z du\u017c\u0105 ilo\u015bci\u0105 dokumentacji. W takim wypadku wdro\u017cenie nowej osoby do projektu powinno te\u017c przebiega\u0107 szybko. Programi\u015bci b\u0119da przychodzi\u0107 z innych j\u0119zyk\u00f3w. todo proces wdra\u017cania nowych ludzi do projektu Setup Projektu todo jak wszystko b\u0119dzie gotowe to jaki\u015b filmik co\u015b ten powstanie Filozofia pisania kodu Wydajno\u015b\u0107 Wydajno\u015b\u0107 nie jest najwa\u017cniejsza, ale nie jest pomijalna. Wydajno\u015b\u0107 kodu bezpo\u015brednio przek\u0142ada si\u0119 na zu\u017cycie energii przez satelit\u0119. 1. Czytanie Kodu. Kod b\u0119dzie czytany przez wi\u0119kszo\u015b\u0107 twojego czasu pracy i to tak sporo... To jest pierwszy i najwa\u017cniejszy punkt tego dokumentu, kod pisany ma 2. Kod ma wyra\u017ca\u0107 intencje. 3. Type safety first Zgodno\u015b\u0107 typ\u00f3w jest jednym z najpot\u0119\u017cniejszych narz\u0119dzi walki z robakami (en. bug) w kodzie unsafe void print_arr(void* arr, size_t len){ for(int i = 0; i < len; i++) std::cout << arr[i]; } safe template <typename T> void print_arr(std::span<T> arr){ for(const auto& item : arr) std::cout << item; } 4. compile time >>> run time 5. abstrakcja nie jest z\u0142a 6. KISS Utrzymuj kod jak najprostszy, je\u017celi zaawansowane struktury danych nie s\u0105 niezb\u0119dne, to ich nie u\u017cywaj std::string percentage_to_rounds(float percentage){ std::string result{}; for (int i = 0; i < 10; i++){ if (result/10.0f <= percentage) result += \"\ud83d\udd35\"; else result += \"\u26aa\"; } return result; } std::string percentage_to_rounds(float percentage) { if (percentage == 0) return \"\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.0 && percentage <= 0.1) return \"\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.1 && percentage <= 0.2) return \"\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.2 && percentage <= 0.3) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.3 && percentage <= 0.4) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.4 && percentage <= 0.5) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.5 && percentage <= 0.6) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.6 && percentage <= 0.7) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\" if (percentage > 0.7 && percentage <= 0.8) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\" if (percentage > 0.8 && percentage <= 0.9) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\" return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\" } Tak, to jest przyk\u0142ad z mema... Pisanie Kodu Feature U\u017cywamy Komentarz std::views \ud83d\udfe8 Mo\u017ce wprowadza\u0107 zamieszanie Makra \ud83d\udfe8 Nie jest type safe ale czasami mo\u017ce p constexpr \u2705 STL \ud83d\udfe8 Alternatyw\u0105 cz\u0119sto jest ETL koncepty \u2705 new \u274c malloc \u274c Nie u\u017cywamy Styl Pisania Kodu Punkty zawarte w tym rozdziale nie maj\u0105 bezpo\u015bredniego wp\u0142ywu na dzia\u0142anie samego kodu. Zawarte tutaj wymogi dotycz\u0105 si\u0119 tylko wizualnej oprawy kodu D\u0142ugo\u015b\u0107 funkcji Funkcje nie powinny by\u0107 d\u0142u\u017csze ni\u017c 40 linijek. Nie wymagamy od programist\u00f3w pionowego monitora 29' do czytania kodu. Je\u017celi funkcja jest za d\u0142uga powiniene\u015b podzieli\u0107 j\u0105 na mniejsze funkcje Formatowanie Odst\u0119py 1 tabulacja - 4 spacje Nawiasy w\u0105sate K&R Nazewnictwo zmiennych nazwy zmiennych powinny przedewszystkim informowa\u0107 o tym co jest w \u015brodku, u\u017cywaj deskryptywnych nazw Rodzaj Case Zmienne globalne UPPER_SNAKE_CASE Makra UPPER_SNAKE_CASE constexpr UPPER_SNAKE_CASE Funkcje snake_case Metody snake_case zmienne snake_case Klasy PascalCase Namespace PascalCase Aliasy PascalCase ps. nie u\u017cywamy emoji jako nazwe zmiennej Przyk\u0142ad \u274c class Kernel; Kernel \ud83e\udd5a; Przyk\u0142ad \u2705 class Kernel; Kernel kernel; [?] Funkcje auto get_raw_data() -> void { ... } U\u017cywanie auto [?] U\u017cywanie this->... Pow\u00f3d Jak przekaza\u0107 informacj\u0119 o tym \u017ce zmienna jest polem klasy? rozwi\u0105za\u0144 jest kilka u\u017cywanie _ przed nazw\u0105 pola np. _count m przed nazw\u0105 pola np. m_count this-> this->count Obs\u0142uga gita Ka\u017cdy branch mergowany do mastera musi posiada\u0107: Stworzon\u0105 dokumentacj\u0119 nowych funkcjionalno\u015bci Zosta\u0107 zatwierdzonym przez 2 innych programist\u00f3w By\u0107 zgodnym ze stylem pisania kodu Zawsze private i public Tworzenie dokumentacji Dokumentacja powinna przedewszystkim istnie\u0107 i by\u0107 aktualna. Brak dokumentacji czy jej niezgodno\u015b\u0107 z rzeczywisto\u015bci\u0105 nie tylko powoduje spowolnienie prac ale przede wszystkim frustracje. A jak dobrze wiadomo jedyne osoby kt\u00f3re mog\u0105 pisa\u0107 dokumetancje to s\u0105 ludzie kt\u00f3rzy stworzyli pewny fragment kodu, z tego powodu te zasady maj\u0105ce na celu upro\u015bci\u0107 do minimum, u\u0142atwi\u0107 i unifikowa\u0107 tooling, spos\u00f3b i styl pisania dokumentacji. Doxygen Testowanie Testy jednostkowe Hardware in the loop Data injection","title":"Home"},{"location":"#wielka-ksiega-przewinien-programistow-osadzonych","text":"","title":"Wielka ksi\u0119ga przewinie\u0144 programist\u00f3w osadzonych"},{"location":"#wstep","text":"Jak wiadomo, dokumentacji nikt nie b\u0119dzie czyta\u0142 dok\u0142adnie, s\u0142owo w s\u0142owo. Wi\u0119c prosz\u0119 si\u0119 nie zdziwi\u0107 jak pojawi\u0105 si\u0119 tutaj jajka wielkanocno \u015bwi\u0105teczne, a forma nie b\u0119dzie w pe\u0142ni oficjalna. Ka\u017cdy punkt b\u0119dzie wygl\u0105da\u0142 na zasadzie Rozwi\u0105zanie -> Problemy tego rozwi\u0105zania -> Lepsze rozwi\u0105zanie + potencjalne wyj\u0105tki B\u0119dzie u\u017cywany C++20, skoro robimy co\u015b mega, to b\u0119dzie nowocze\u015bnie.","title":"Wst\u0119p"},{"location":"#zaozenia","text":"Projekt tworzenia studenckiego satelity, nie jest projektem drogiej todo listy. Programi\u015bci, przychodz\u0105, odchodz\u0105, stale... Programi\u015bci w projekcie b\u0119da si\u0119 przewija\u0107, b\u0119da z r\u00f3\u017cnym do\u015bwiadczeniem, z r\u00f3\u017cn\u0105 wiedz\u0105. To jest pow\u00f3d dla kt\u00f3rego kod powinien by\u0107 jak najprostszy, to znaczy, bez fiku\u015bnych twor\u00f3w np std::views , z du\u017c\u0105 ilo\u015bci\u0105 dokumentacji. W takim wypadku wdro\u017cenie nowej osoby do projektu powinno te\u017c przebiega\u0107 szybko. Programi\u015bci b\u0119da przychodzi\u0107 z innych j\u0119zyk\u00f3w.","title":"Za\u0142o\u017cenia"},{"location":"#todo","text":"proces wdra\u017cania nowych ludzi do projektu","title":"todo"},{"location":"#setup-projektu","text":"","title":"Setup Projektu"},{"location":"#todo_1","text":"jak wszystko b\u0119dzie gotowe to jaki\u015b filmik co\u015b ten powstanie","title":"todo"},{"location":"#filozofia-pisania-kodu","text":"","title":"Filozofia pisania kodu"},{"location":"#wydajnosc","text":"Wydajno\u015b\u0107 nie jest najwa\u017cniejsza, ale nie jest pomijalna. Wydajno\u015b\u0107 kodu bezpo\u015brednio przek\u0142ada si\u0119 na zu\u017cycie energii przez satelit\u0119.","title":"Wydajno\u015b\u0107"},{"location":"#1-czytanie-kodu","text":"Kod b\u0119dzie czytany przez wi\u0119kszo\u015b\u0107 twojego czasu pracy i to tak sporo... To jest pierwszy i najwa\u017cniejszy punkt tego dokumentu, kod pisany ma","title":"1. Czytanie Kodu."},{"location":"#2-kod-ma-wyrazac-intencje","text":"","title":"2. Kod ma wyra\u017ca\u0107 intencje."},{"location":"#3-type-safety-first","text":"Zgodno\u015b\u0107 typ\u00f3w jest jednym z najpot\u0119\u017cniejszych narz\u0119dzi walki z robakami (en. bug) w kodzie unsafe void print_arr(void* arr, size_t len){ for(int i = 0; i < len; i++) std::cout << arr[i]; } safe template <typename T> void print_arr(std::span<T> arr){ for(const auto& item : arr) std::cout << item; }","title":"3. Type safety first"},{"location":"#4-compile-time-run-time","text":"","title":"4. compile time &gt;&gt;&gt; run time"},{"location":"#5-abstrakcja-nie-jest-za","text":"","title":"5. abstrakcja nie jest z\u0142a"},{"location":"#6-kiss","text":"Utrzymuj kod jak najprostszy, je\u017celi zaawansowane struktury danych nie s\u0105 niezb\u0119dne, to ich nie u\u017cywaj std::string percentage_to_rounds(float percentage){ std::string result{}; for (int i = 0; i < 10; i++){ if (result/10.0f <= percentage) result += \"\ud83d\udd35\"; else result += \"\u26aa\"; } return result; } std::string percentage_to_rounds(float percentage) { if (percentage == 0) return \"\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.0 && percentage <= 0.1) return \"\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.1 && percentage <= 0.2) return \"\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.2 && percentage <= 0.3) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.3 && percentage <= 0.4) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.4 && percentage <= 0.5) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.5 && percentage <= 0.6) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\u26aa\" if (percentage > 0.6 && percentage <= 0.7) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\u26aa\" if (percentage > 0.7 && percentage <= 0.8) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\u26aa\" if (percentage > 0.8 && percentage <= 0.9) return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\u26aa\" return \"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\" } Tak, to jest przyk\u0142ad z mema...","title":"6. KISS"},{"location":"#pisanie-kodu","text":"Feature U\u017cywamy Komentarz std::views \ud83d\udfe8 Mo\u017ce wprowadza\u0107 zamieszanie Makra \ud83d\udfe8 Nie jest type safe ale czasami mo\u017ce p constexpr \u2705 STL \ud83d\udfe8 Alternatyw\u0105 cz\u0119sto jest ETL koncepty \u2705 new \u274c malloc \u274c","title":"Pisanie Kodu"},{"location":"#nie-uzywamy","text":"","title":"Nie u\u017cywamy"},{"location":"#styl-pisania-kodu","text":"Punkty zawarte w tym rozdziale nie maj\u0105 bezpo\u015bredniego wp\u0142ywu na dzia\u0142anie samego kodu. Zawarte tutaj wymogi dotycz\u0105 si\u0119 tylko wizualnej oprawy kodu","title":"Styl Pisania Kodu"},{"location":"#dugosc-funkcji","text":"Funkcje nie powinny by\u0107 d\u0142u\u017csze ni\u017c 40 linijek. Nie wymagamy od programist\u00f3w pionowego monitora 29' do czytania kodu. Je\u017celi funkcja jest za d\u0142uga powiniene\u015b podzieli\u0107 j\u0105 na mniejsze funkcje","title":"D\u0142ugo\u015b\u0107 funkcji"},{"location":"#formatowanie","text":"","title":"Formatowanie"},{"location":"#odstepy","text":"1 tabulacja - 4 spacje","title":"Odst\u0119py"},{"location":"#nawiasy-wasate","text":"K&R","title":"Nawiasy w\u0105sate"},{"location":"#nazewnictwo-zmiennych","text":"nazwy zmiennych powinny przedewszystkim informowa\u0107 o tym co jest w \u015brodku, u\u017cywaj deskryptywnych nazw Rodzaj Case Zmienne globalne UPPER_SNAKE_CASE Makra UPPER_SNAKE_CASE constexpr UPPER_SNAKE_CASE Funkcje snake_case Metody snake_case zmienne snake_case Klasy PascalCase Namespace PascalCase Aliasy PascalCase ps. nie u\u017cywamy emoji jako nazwe zmiennej Przyk\u0142ad \u274c class Kernel; Kernel \ud83e\udd5a; Przyk\u0142ad \u2705 class Kernel; Kernel kernel;","title":"Nazewnictwo zmiennych"},{"location":"#funkcje","text":"auto get_raw_data() -> void { ... }","title":"[?] Funkcje"},{"location":"#uzywanie-auto","text":"","title":"U\u017cywanie auto"},{"location":"#uzywanie-this-","text":"","title":"[?] U\u017cywanie this-&gt;..."},{"location":"#powod","text":"Jak przekaza\u0107 informacj\u0119 o tym \u017ce zmienna jest polem klasy? rozwi\u0105za\u0144 jest kilka u\u017cywanie _ przed nazw\u0105 pola np. _count m przed nazw\u0105 pola np. m_count this-> this->count","title":"Pow\u00f3d"},{"location":"#obsuga-gita","text":"Ka\u017cdy branch mergowany do mastera musi posiada\u0107: Stworzon\u0105 dokumentacj\u0119 nowych funkcjionalno\u015bci Zosta\u0107 zatwierdzonym przez 2 innych programist\u00f3w By\u0107 zgodnym ze stylem pisania kodu","title":"Obs\u0142uga gita"},{"location":"#zawsze-private-i-public","text":"","title":"Zawsze private i public"},{"location":"#tworzenie-dokumentacji","text":"Dokumentacja powinna przedewszystkim istnie\u0107 i by\u0107 aktualna. Brak dokumentacji czy jej niezgodno\u015b\u0107 z rzeczywisto\u015bci\u0105 nie tylko powoduje spowolnienie prac ale przede wszystkim frustracje. A jak dobrze wiadomo jedyne osoby kt\u00f3re mog\u0105 pisa\u0107 dokumetancje to s\u0105 ludzie kt\u00f3rzy stworzyli pewny fragment kodu, z tego powodu te zasady maj\u0105ce na celu upro\u015bci\u0107 do minimum, u\u0142atwi\u0107 i unifikowa\u0107 tooling, spos\u00f3b i styl pisania dokumentacji. Doxygen","title":"Tworzenie dokumentacji"},{"location":"#testowanie","text":"","title":"Testowanie"},{"location":"#testy-jednostkowe","text":"","title":"Testy jednostkowe"},{"location":"#hardware-in-the-loop","text":"","title":"Hardware in the loop"},{"location":"#data-injection","text":"","title":"Data injection"},{"location":"sex/","text":"hehe","title":"Sex"}]}